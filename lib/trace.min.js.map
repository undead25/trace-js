{"version":3,"file":"trace.min.js","sources":["../src/request.ts","../src/util.ts","../src/tracekit.js","../src/config.ts","../src/environment.ts","../src/breadcrumbs.ts","../src/report.ts","../src/performance.ts","../src/index.ts"],"sourcesContent":["export function makeRequest(options: any):void {\r\n  let request:XMLHttpRequest = new XMLHttpRequest();\r\n  const hasCORS:boolean = 'withCredentials' in request || typeof window['XDomainRequest'] !== 'undefined';\r\n\r\n  if (!hasCORS) return;\r\n\r\n  let url = options.url;\r\n  if ('withCredentials' in request) {\r\n    request.onreadystatechange = () => {\r\n      if (request.readyState !== 4) {\r\n        return;\r\n      } else if (request.status === 200) {\r\n        options.onSuccess = options.onSuccess();\r\n      } else if (options.onError) {\r\n        let error: any = new Error(`Error: ${request.status}`);\r\n        error.request = request;\r\n        options.onError(error);\r\n      }\r\n    }\r\n  } else {\r\n    // xdomainrequest cannot go http -> https (or vice versa),\r\n    // so always use protocol relative\r\n    request = new (window as any).XDomainRequest();\r\n    url = url.replace(/^https?:/, '');\r\n\r\n    // onreadystatechange not supported by XDomainRequest\r\n    if(options.onSuccess) request.onload = options.onSuccess;\r\n    if(options.onError) {\r\n      request.onerror = () => {\r\n        let error: any = new Error(`Error: XDomainRequest`);\r\n        error.request = request;\r\n        options.onError(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  request.open('POST', url, true);\r\n  request.send(JSON.stringify(options.data));\r\n}\r\n","\r\n/**\r\n * 是否为IE浏览器\r\n * @export\r\n * @returns {boolean} \r\n */\r\nexport function isIE(): boolean {\r\n  return navigator.appVersion.indexOf(\"MSIE\") !== -1;\r\n}\r\n\r\nexport function isError(value: any): boolean {\r\n  switch (Object.prototype.toString.call(value)) {\r\n    case '[object Error]': return true;\r\n    case '[object Exception]': return true;\r\n    case '[object DOMException]': return true;\r\n    default: return value instanceof Error;\r\n  }\r\n}\r\n\r\n/**\r\n * 生产唯一ID\r\n * @export\r\n * @returns {string} - 唯一guid\r\n */\r\nexport function guid(): string {\r\n  var crypto = window.crypto || window['msCrypto'];\r\n\r\n  if (crypto && crypto.getRandomValues) {\r\n    // Use window.crypto API if available\r\n    var arr = new Uint16Array(8);\r\n    crypto.getRandomValues(arr);\r\n\r\n    // set 4 in byte 7\r\n    arr[3] = arr[3] & 0xFFF | 0x4000;\r\n    // set 2 most significant bits of byte 9 to '10'\r\n    arr[4] = arr[4] & 0x3FFF | 0x8000;\r\n\r\n    var pad = function (num) {\r\n      var v = num.toString(16);\r\n      while (v.length < 4) {\r\n        v = '0' + v;\r\n      }\r\n      return v;\r\n    };\r\n\r\n    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) +\r\n      pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\r\n  } else {\r\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\r\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = Math.random() * 16 | 0,\r\n        v = c === 'x' ? r : r & 0x3 | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 文档绑定自定义事件\r\n * @export\r\n * @param {string} eventType \r\n * @param {Object} [options={}] \r\n * @returns {void} \r\n */\r\nexport function triggerEvent(eventType: string, options: Object = {}): void {\r\n  if (!document) return;\r\n\r\n  let _event: Event;\r\n  let key: string;\r\n\r\n  eventType = eventType.substr(0, 1).toUpperCase + eventType.substr(1);\r\n\r\n  if (document.createEvent) {\r\n    _event = document.createEvent('HTMLEvents');\r\n    _event.initEvent(eventType, true, true);\r\n  } else {\r\n    // IE8-9\r\n    _event = document['createEventObject']();\r\n    (_event as any).eventType = eventType;\r\n  }\r\n\r\n  for (key in options) {\r\n    if (options.hasOwnProperty(key)) {\r\n      _event[key] = options[key];\r\n    }\r\n  }\r\n\r\n  if (document.createEvent) {\r\n    document.dispatchEvent(_event);\r\n  } else {\r\n    document['fireEvent']('on' + (_event as any).eventType.toLowerCase(), _event);\r\n  }\r\n}\r\n\r\n/**\r\n * 原生方法垫片\r\n * @param {Object} obj - 内置对象，例：`window`, `document`\r\n * @param {string} name - 内置对象的函数名称，例：`addEventListener`\r\n * @param {Function} replacement - 替换后的函数\r\n * @param {*} [track] - record instrumentation to an array\r\n */\r\nexport function polyfill(obj: Object, name: string, replacement: Function, track?: any): void {\r\n  const origin = obj[name];\r\n  obj[name] = replacement(origin);\r\n  if (track) {\r\n    track.push([obj, name, origin]);\r\n  }\r\n}\r\n\r\nexport function wrap(options: any, func?: any, origin?: any) {\r\n  if (!func && typeof options !== 'function') return options;\r\n\r\n  if (typeof options === 'function') {\r\n    func = options;\r\n    options = undefined;\r\n  }\r\n\r\n  if (typeof func !== 'function') return func;\r\n\r\n  try {\r\n    if (func.trace) return func;\r\n    if (func.track_wrapper) return func.track_wrapper;\r\n  } catch (e) {\r\n    return func;\r\n  }\r\n\r\n  function wrapped() {\r\n    let trace, inner;\r\n    var args = [], i = arguments.length,\r\n      deep = !options || options && options.deep !== false;\r\n\r\n    if (origin && typeof origin === 'function') {\r\n      origin.apply(this, arguments);\r\n    }\r\n\r\n    while (i--) args[i] = deep ? wrap(options, arguments[i]) : arguments[i];\r\n\r\n    try {\r\n      return func.apply(this, args);\r\n    } catch (e) {\r\n      // self._ignoreNextOnError();\r\n      // self.captureException(e, options);\r\n      throw e;\r\n    }\r\n\r\n  }\r\n  // copy over properties of the old function\r\n  for (var property in func) {\r\n    if (func.hasOwnProperty(process)) {\r\n      wrapped[property] = func[property];\r\n    }\r\n  }\r\n  wrapped.prototype = func.prototype;\r\n\r\n  func.track_wrapper = wrapped;\r\n  // Signal that this function has been wrapped already\r\n  // for both debugging and to prevent it to being wrapped twice\r\n  // wrapped.trace = true;\r\n  // wrapped.inner = func;\r\n\r\n  return wrapped;\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {Array<RegExp>} patterns \r\n * @returns {RegExp} \r\n */\r\nexport function joinRegExp(patterns: Array<RegExp>): RegExp {\r\n  let sources = [];\r\n  let pattern;\r\n  for (let i = 0; i < patterns.length; i++) {\r\n    pattern = patterns[i];\r\n    if (typeof pattern === 'string') {\r\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\r\n    } else if (pattern && pattern.source) {\r\n      // If it's a regexp already, we want to extract the source\r\n      sources.push(pattern.source);\r\n    }\r\n  }\r\n  return new RegExp(sources.join('|'), 'i');\r\n}\r\n\r\n/**\r\n * Given a child DOM element, returns a query-selector statement describing that\r\n * and its ancestors\r\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\r\n * @param elem\r\n * @returns {string}\r\n */\r\nexport function htmlTreeAsString(element: HTMLElement): string {\r\n  var MAX_TRAVERSE_HEIGHT = 5,\r\n    MAX_OUTPUT_LEN = 80,\r\n    out = [],\r\n    height = 0,\r\n    len = 0,\r\n    separator = ' > ',\r\n    sepLength = separator.length,\r\n    nextStr;\r\n\r\n  while (element && height++ < MAX_TRAVERSE_HEIGHT) {\r\n    nextStr = htmlElementAsString(element);\r\n    if (nextStr === 'html' || height > 1 && len + (out.length * sepLength) + nextStr.length >= MAX_OUTPUT_LEN) {\r\n      break;\r\n    }\r\n\r\n    out.push(nextStr);\r\n\r\n    len += nextStr.length;\r\n    element = element.parentElement;\r\n  }\r\n\r\n  return out.reverse().join(separator);\r\n}\r\n\r\n/**\r\n * Returns a simple, query-selector representation of a DOM element\r\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\r\n * @param HTMLElement\r\n * @returns {string}\r\n */\r\nfunction htmlElementAsString(element: HTMLElement): string {\r\n  var out = [],\r\n    className,\r\n    classes,\r\n    key,\r\n    attr,\r\n    i;\r\n\r\n  if (!element || !element.tagName) {\r\n    return '';\r\n  }\r\n\r\n  out.push(element.tagName.toLowerCase());\r\n  if (element.id) {\r\n    out.push('#' + element.id);\r\n  }\r\n\r\n  className = element.className;\r\n  if (className && typeof className === 'string') {\r\n    classes = className.split(/\\s+/);\r\n    for (i = 0; i < classes.length; i++) {\r\n      out.push('.' + classes[i]);\r\n    }\r\n  }\r\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\r\n  for (i = 0; i < attrWhitelist.length; i++) {\r\n    key = attrWhitelist[i];\r\n    attr = element.getAttribute(key);\r\n    if (attr) {\r\n      out.push('[' + key + '=\"' + attr + '\"]');\r\n    }\r\n  }\r\n  return out.join('');\r\n}\r\n\r\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\r\n// intentionally using regex and not <a/> href parsing trick because React Native and other\r\n// environments where DOM might not be available\r\nexport function parseUrl(url: string) {\r\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\r\n  if (!match) return;\r\n\r\n  // coerce to undefined values to empty string so we don't get 'undefined'\r\n  var query = match[6] || '';\r\n  var fragment = match[8] || '';\r\n  return {\r\n    protocol: match[2],\r\n    host: match[4],\r\n    path: match[5],\r\n    relative: match[5] + query + fragment // everything minus origin\r\n  };\r\n}\r\n\r\n/**\r\n * 获取元素的属性值 \r\n * @param {HTMLElement} element  - 需要获取属性的元素\r\n * @returns {Object} - 属性键值对象\r\n */\r\nexport function getAttributes(element: HTMLElement): Object {\r\n  const result: Object = {};\r\n  const attributes: NamedNodeMap = element.attributes;\r\n\r\n  for (let i = 0; i < attributes.length; i++) {\r\n    const item = attributes[i];\r\n    result[item.name] = item.value;\r\n  }\r\n\r\n  return result;\r\n}","'use strict';\r\n\r\n/*\r\n TraceKit - Cross brower stack traces\r\n\r\n This was originally forked from github.com/occ/TraceKit, but has since been\r\n largely re-written and is now maintained as part of raven-js.  Tests for\r\n this are in test/vendor.\r\n\r\n MIT license\r\n*/\r\n\r\nvar TraceKit = {\r\n    collectWindowErrors: true,\r\n    debug: false\r\n};\r\n\r\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\r\nvar _window = typeof window !== 'undefined' ? window\r\n            : typeof global !== 'undefined' ? global\r\n            : typeof self !== 'undefined' ? self\r\n            : {};\r\n\r\n// global reference to slice\r\nvar _slice = [].slice;\r\nvar UNKNOWN_FUNCTION = '?';\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\r\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\r\n\r\nfunction getLocationHref() {\r\n    if (typeof document === 'undefined' || typeof document.location === 'undefined')\r\n        return '';\r\n\r\n    return document.location.href;\r\n}\r\n\r\n\r\n/**\r\n * TraceKit.report: cross-browser processing of unhandled exceptions\r\n *\r\n * Syntax:\r\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\r\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\r\n *   TraceKit.report(exception)\r\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\r\n *\r\n * Supports:\r\n *   - Firefox: full stack trace with line numbers, plus column number\r\n *              on top frame; column number is not guaranteed\r\n *   - Opera:   full stack trace with line and column numbers\r\n *   - Chrome:  full stack trace with line and column numbers\r\n *   - Safari:  line and column number for the top frame only; some frames\r\n *              may be missing, and column number is not guaranteed\r\n *   - IE:      line and column number for the top frame only; some frames\r\n *              may be missing, and column number is not guaranteed\r\n *\r\n * In theory, TraceKit should work on all of the following versions:\r\n *   - IE5.5+ (only 8.0 tested)\r\n *   - Firefox 0.9+ (only 3.5+ tested)\r\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\r\n *     Exceptions Have Stacktrace to be enabled in opera:config)\r\n *   - Safari 3+ (only 4+ tested)\r\n *   - Chrome 1+ (only 5+ tested)\r\n *   - Konqueror 3.5+ (untested)\r\n *\r\n * Requires TraceKit.computeStackTrace.\r\n *\r\n * Tries to catch all unhandled exceptions and report them to the\r\n * subscribed handlers. Please note that TraceKit.report will rethrow the\r\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\r\n * If the exception does not reach the top of the browser, you will only\r\n * get a stack trace from the point where TraceKit.report was called.\r\n *\r\n * Handlers receive a stackInfo object as described in the\r\n * TraceKit.computeStackTrace docs.\r\n */\r\nTraceKit.report = (function reportModuleWrapper() {\r\n    var handlers = [],\r\n        lastArgs = null,\r\n        lastException = null,\r\n        lastExceptionStack = null;\r\n\r\n    /**\r\n     * Add a crash handler.\r\n     * @param {Function} handler\r\n     */\r\n    function subscribe(handler) {\r\n        installGlobalHandler();\r\n        handlers.push(handler);\r\n    }\r\n\r\n    /**\r\n     * Remove a crash handler.\r\n     * @param {Function} handler\r\n     */\r\n    function unsubscribe(handler) {\r\n        for (var i = handlers.length - 1; i >= 0; --i) {\r\n            if (handlers[i] === handler) {\r\n                handlers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all crash handlers.\r\n     */\r\n    function unsubscribeAll() {\r\n        uninstallGlobalHandler();\r\n        handlers = [];\r\n    }\r\n\r\n    /**\r\n     * Dispatch stack information to all handlers.\r\n     * @param {Object.<string, *>} stack\r\n     */\r\n    function notifyHandlers(stack, isWindowError) {\r\n        var exception = null;\r\n        if (isWindowError && !TraceKit.collectWindowErrors) {\r\n          return;\r\n        }\r\n        for (var i in handlers) {\r\n            if (handlers.hasOwnProperty(i)) {\r\n                try {\r\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\r\n                } catch (inner) {\r\n                    exception = inner;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (exception) {\r\n            throw exception;\r\n        }\r\n    }\r\n\r\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\r\n\r\n    /**\r\n     * Ensures all global unhandled exceptions are recorded.\r\n     * Supported by Gecko and IE.\r\n     * @param {string} message Error message.\r\n     * @param {string} url URL of script that generated the exception.\r\n     * @param {(number|string)} lineNo The line number at which the error\r\n     * occurred.\r\n     * @param {?(number|string)} colNo The column number at which the error\r\n     * occurred.\r\n     * @param {?Error} ex The actual Error object.\r\n     */\r\n    function traceKitWindowOnError(message, url, lineNo, colNo, ex) {\r\n        var stack = null;\r\n\r\n        if (lastExceptionStack) {\r\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\r\n            processLastException();\r\n        } else if (ex) {\r\n            // non-string `ex` arg; attempt to extract stack trace\r\n\r\n            // New chrome and blink send along a real error object\r\n            // Let's just report that like a normal error.\r\n            // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\r\n            stack = TraceKit.computeStackTrace(ex);\r\n            notifyHandlers(stack, true);\r\n        } else {\r\n            var location = {\r\n                'url': url,\r\n                'line': lineNo,\r\n                'column': colNo\r\n            };\r\n\r\n            var name = undefined;\r\n            var msg = message; // must be new var or will modify original `arguments`\r\n            var groups;\r\n            if ({}.toString.call(message) === '[object String]') {\r\n                var groups = message.match(ERROR_TYPES_RE);\r\n                if (groups) {\r\n                    name = groups[1];\r\n                    msg = groups[2];\r\n                }\r\n            }\r\n\r\n            location.func = UNKNOWN_FUNCTION;\r\n\r\n            stack = {\r\n                'name': name,\r\n                'message': msg,\r\n                'url': getLocationHref(),\r\n                'stack': [location]\r\n            };\r\n            notifyHandlers(stack, true);\r\n        }\r\n\r\n        if (_oldOnerrorHandler) {\r\n            return _oldOnerrorHandler.apply(this, arguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function installGlobalHandler ()\r\n    {\r\n        if (_onErrorHandlerInstalled) {\r\n            return;\r\n        }\r\n        _oldOnerrorHandler = _window.onerror;\r\n        _window.onerror = traceKitWindowOnError;\r\n        _onErrorHandlerInstalled = true;\r\n    }\r\n\r\n    function uninstallGlobalHandler ()\r\n    {\r\n        if (!_onErrorHandlerInstalled) {\r\n            return;\r\n        }\r\n        _window.onerror = _oldOnerrorHandler;\r\n        _onErrorHandlerInstalled = false;\r\n        _oldOnerrorHandler = undefined;\r\n    }\r\n\r\n    function processLastException() {\r\n        var _lastExceptionStack = lastExceptionStack,\r\n            _lastArgs = lastArgs;\r\n        lastArgs = null;\r\n        lastExceptionStack = null;\r\n        lastException = null;\r\n        notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\r\n    }\r\n\r\n    /**\r\n     * Reports an unhandled Error to TraceKit.\r\n     * @param {Error} ex\r\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\r\n     * Only used for window.onerror to not cause an infinite loop of\r\n     * rethrowing.\r\n     */\r\n    function report(ex, rethrow) {\r\n        var args = _slice.call(arguments, 1);\r\n        if (lastExceptionStack) {\r\n            if (lastException === ex) {\r\n                return; // already caught by an inner catch block, ignore\r\n            } else {\r\n              processLastException();\r\n            }\r\n        }\r\n\r\n        var stack = TraceKit.computeStackTrace(ex);\r\n        lastExceptionStack = stack;\r\n        lastException = ex;\r\n        lastArgs = args;\r\n\r\n        // If the stack trace is incomplete, wait for 2 seconds for\r\n        // slow slow IE to see if onerror occurs or not before reporting\r\n        // this exception; otherwise, we will end up with an incomplete\r\n        // stack trace\r\n        setTimeout(function () {\r\n            if (lastException === ex) {\r\n                processLastException();\r\n            }\r\n        }, (stack.incomplete ? 2000 : 0));\r\n\r\n        if (rethrow !== false) {\r\n            throw ex; // re-throw to propagate to the top level (and cause window.onerror)\r\n        }\r\n    }\r\n\r\n    report.subscribe = subscribe;\r\n    report.unsubscribe = unsubscribe;\r\n    report.uninstall = unsubscribeAll;\r\n    return report;\r\n}());\r\n\r\n/**\r\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\r\n *\r\n * Syntax:\r\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\r\n * Returns:\r\n *   s.name              - exception name\r\n *   s.message           - exception message\r\n *   s.stack[i].url      - JavaScript or HTML file URL\r\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\r\n *   s.stack[i].args     - arguments passed to the function, if known\r\n *   s.stack[i].line     - line number, if known\r\n *   s.stack[i].column   - column number, if known\r\n *\r\n * Supports:\r\n *   - Firefox:  full stack trace with line numbers and unreliable column\r\n *               number on top frame\r\n *   - Opera 10: full stack trace with line and column numbers\r\n *   - Opera 9-: full stack trace with line numbers\r\n *   - Chrome:   full stack trace with line and column numbers\r\n *   - Safari:   line and column number for the topmost stacktrace element\r\n *               only\r\n *   - IE:       no line numbers whatsoever\r\n *\r\n * Tries to guess names of anonymous functions by looking for assignments\r\n * in the source code. In IE and Safari, we have to guess source file names\r\n * by searching for function bodies inside all page scripts. This will not\r\n * work for scripts that are loaded cross-domain.\r\n * Here be dragons: some function names may be guessed incorrectly, and\r\n * duplicate functions may be mismatched.\r\n *\r\n * TraceKit.computeStackTrace should only be used for tracing purposes.\r\n * Logging of unhandled exceptions should be done with TraceKit.report,\r\n * which builds on top of TraceKit.computeStackTrace and provides better\r\n * IE support by utilizing the window.onerror event to retrieve information\r\n * about the top of the stack.\r\n *\r\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\r\n * so computeStackTrace instead walks its *own* chain of callers.\r\n * This means that:\r\n *  * in Safari, some methods may be missing from the stack trace;\r\n *  * in IE, the topmost function in the stack trace will always be the\r\n *    caller of computeStackTrace.\r\n *\r\n * This is okay for tracing (because you are likely to be calling\r\n * computeStackTrace from the function you want to be the topmost element\r\n * of the stack trace anyway), but not okay for logging unhandled\r\n * exceptions (because your catch block will likely be far away from the\r\n * inner function that actually caused the exception).\r\n *\r\n */\r\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\r\n    // Contents of Exception in various browsers.\r\n    //\r\n    // SAFARI:\r\n    // ex.message = Can't find variable: qq\r\n    // ex.line = 59\r\n    // ex.sourceId = 580238192\r\n    // ex.sourceURL = http://...\r\n    // ex.expressionBeginOffset = 96\r\n    // ex.expressionCaretOffset = 98\r\n    // ex.expressionEndOffset = 98\r\n    // ex.name = ReferenceError\r\n    //\r\n    // FIREFOX:\r\n    // ex.message = qq is not defined\r\n    // ex.fileName = http://...\r\n    // ex.lineNumber = 59\r\n    // ex.columnNumber = 69\r\n    // ex.stack = ...stack trace... (see the example below)\r\n    // ex.name = ReferenceError\r\n    //\r\n    // CHROME:\r\n    // ex.message = qq is not defined\r\n    // ex.name = ReferenceError\r\n    // ex.type = not_defined\r\n    // ex.arguments = ['aa']\r\n    // ex.stack = ...stack trace...\r\n    //\r\n    // INTERNET EXPLORER:\r\n    // ex.message = ...\r\n    // ex.name = ReferenceError\r\n    //\r\n    // OPERA:\r\n    // ex.message = ...message... (see the example below)\r\n    // ex.name = ReferenceError\r\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\r\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\r\n\r\n    /**\r\n     * Computes stack trace information from the stack property.\r\n     * Chrome and Gecko use this property.\r\n     * @param {Error} ex\r\n     * @return {?Object.<string, *>} Stack trace information.\r\n     */\r\n    function computeStackTraceFromStackProp(ex) {\r\n        if (typeof ex.stack === 'undefined' || !ex.stack) return;\r\n\r\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\r\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\r\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\r\n\r\n            // Used to additionally parse URL/line/column from eval frames\r\n            geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\r\n            chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\r\n\r\n            lines = ex.stack.split('\\n'),\r\n            stack = [],\r\n            submatch,\r\n            parts,\r\n            element,\r\n            reference = /^(.*) is undefined$/.exec(ex.message);\r\n\r\n        for (var i = 0, j = lines.length; i < j; ++i) {\r\n            if ((parts = chrome.exec(lines[i]))) {\r\n                var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\r\n                var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\r\n                if (isEval && (submatch = chromeEval.exec(parts[2]))) {\r\n                    // throw out eval line/column and use top-most line/column number\r\n                    parts[2] = submatch[1]; // url\r\n                    parts[3] = submatch[2]; // line\r\n                    parts[4] = submatch[3]; // column\r\n                }\r\n                element = {\r\n                    'url': !isNative ? parts[2] : null,\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': isNative ? [parts[2]] : [],\r\n                    'line': parts[3] ? +parts[3] : null,\r\n                    'column': parts[4] ? +parts[4] : null\r\n                };\r\n            } else if ( parts = winjs.exec(lines[i]) ) {\r\n                element = {\r\n                    'url': parts[2],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': [],\r\n                    'line': +parts[3],\r\n                    'column': parts[4] ? +parts[4] : null\r\n                };\r\n            } else if ((parts = gecko.exec(lines[i]))) {\r\n                var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\r\n                if (isEval && (submatch = geckoEval.exec(parts[3]))) {\r\n                    // throw out eval line/column and use top-most line number\r\n                    parts[3] = submatch[1];\r\n                    parts[4] = submatch[2];\r\n                    parts[5] = null; // no column when eval\r\n                } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {\r\n                    // FireFox uses this awesome columnNumber property for its top frame\r\n                    // Also note, Firefox's column number is 0-based and everything else expects 1-based,\r\n                    // so adding 1\r\n                    // NOTE: this hack doesn't work if top-most frame is eval\r\n                    stack[0].column = ex.columnNumber + 1;\r\n                }\r\n                element = {\r\n                    'url': parts[3],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': parts[2] ? parts[2].split(',') : [],\r\n                    'line': parts[4] ? +parts[4] : null,\r\n                    'column': parts[5] ? +parts[5] : null\r\n                };\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            if (!element.func && element.line) {\r\n                element.func = UNKNOWN_FUNCTION;\r\n            }\r\n\r\n            stack.push(element);\r\n        }\r\n\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'url': getLocationHref(),\r\n            'stack': stack\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Adds information about the first frame to incomplete stack traces.\r\n     * Safari and IE require this to get complete data on the first frame.\r\n     * @param {Object.<string, *>} stackInfo Stack trace information from\r\n     * one of the compute* methods.\r\n     * @param {string} url The URL of the script that caused an error.\r\n     * @param {(number|string)} lineNo The line number of the script that\r\n     * caused an error.\r\n     * @param {string=} message The error generated by the browser, which\r\n     * hopefully contains the name of the object that caused the error.\r\n     * @return {boolean} Whether or not the stack information was\r\n     * augmented.\r\n     */\r\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\r\n        var initial = {\r\n            'url': url,\r\n            'line': lineNo\r\n        };\r\n\r\n        if (initial.url && initial.line) {\r\n            stackInfo.incomplete = false;\r\n\r\n            if (!initial.func) {\r\n                initial.func = UNKNOWN_FUNCTION;\r\n            }\r\n\r\n            if (stackInfo.stack.length > 0) {\r\n                if (stackInfo.stack[0].url === initial.url) {\r\n                    if (stackInfo.stack[0].line === initial.line) {\r\n                        return false; // already in stack trace\r\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\r\n                        stackInfo.stack[0].line = initial.line;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            stackInfo.stack.unshift(initial);\r\n            stackInfo.partial = true;\r\n            return true;\r\n        } else {\r\n            stackInfo.incomplete = true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Computes stack trace information by walking the arguments.caller\r\n     * chain at the time the exception occurred. This will cause earlier\r\n     * frames to be missed but is the only way to get any stack trace in\r\n     * Safari and IE. The top frame is restored by\r\n     * {@link augmentStackTraceWithInitialElement}.\r\n     * @param {Error} ex\r\n     * @return {?Object.<string, *>} Stack trace information.\r\n     */\r\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\r\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\r\n            stack = [],\r\n            funcs = {},\r\n            recursion = false,\r\n            parts,\r\n            item,\r\n            source;\r\n\r\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\r\n            if (curr === computeStackTrace || curr === TraceKit.report) {\r\n                // console.log('skipping internal function');\r\n                continue;\r\n            }\r\n\r\n            item = {\r\n                'url': null,\r\n                'func': UNKNOWN_FUNCTION,\r\n                'line': null,\r\n                'column': null\r\n            };\r\n\r\n            if (curr.name) {\r\n                item.func = curr.name;\r\n            } else if ((parts = functionName.exec(curr.toString()))) {\r\n                item.func = parts[1];\r\n            }\r\n\r\n            if (typeof item.func === 'undefined') {\r\n              try {\r\n                item.func = parts.input.substring(0, parts.input.indexOf('{'));\r\n              } catch (e) { }\r\n            }\r\n\r\n            if (funcs['' + curr]) {\r\n                recursion = true;\r\n            }else{\r\n                funcs['' + curr] = true;\r\n            }\r\n\r\n            stack.push(item);\r\n        }\r\n\r\n        if (depth) {\r\n            // console.log('depth is ' + depth);\r\n            // console.log('stack is ' + stack.length);\r\n            stack.splice(0, depth);\r\n        }\r\n\r\n        var result = {\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'url': getLocationHref(),\r\n            'stack': stack\r\n        };\r\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Computes a stack trace for an exception.\r\n     * @param {Error} ex\r\n     * @param {(string|number)=} depth\r\n     */\r\n    function computeStackTrace(ex, depth) {\r\n        var stack = null;\r\n        depth = (depth == null ? 0 : +depth);\r\n\r\n        try {\r\n            stack = computeStackTraceFromStackProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (TraceKit.debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (TraceKit.debug) {\r\n                throw e;\r\n            }\r\n        }\r\n        return {\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'url': getLocationHref()\r\n        };\r\n    }\r\n\r\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\r\n    computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\r\n\r\n    return computeStackTrace;\r\n}());\r\n\r\nexport default TraceKit;\r\n","\r\nexport const defaultConfig: Trace.Config = {\r\n  apiKey: '',\r\n  reportUrl: 'http://localhost:3001/tracer/error',\r\n  ignoreErrors: [],\r\n  ignoreUrls: [],\r\n  autoBreadcrumbs: {\r\n    dom: true,\r\n    xhr: true,\r\n    location: true,\r\n    console: false\r\n  },\r\n  releaseStage: 'production',\r\n  catchAjax: true,\r\n  catchConsole: true,\r\n  maxStackDepth: 10,\r\n  repeatReport: false,\r\n  maxBreadcrumbs: 100\r\n}\r\n","export const environment: Trace.Environment = {\r\n  /** 屏幕宽度 */\r\n  screenWidth: (document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth),\r\n  /** 屏幕高度 */\r\n  screenHeigth: (document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight),\r\n  /** 浏览器信息 */\r\n  userAgent: navigator.userAgent,\r\n  /** 浏览器语言 */\r\n  language: navigator.language\r\n}\r\n","import { getAttributes, htmlTreeAsString, polyfill, wrap, parseUrl } from './util';\r\nconst objectAssign = Object.assign || require('object-assign');\r\n\r\nexport class BreadCrumbs {\r\n  public crumbsData: Array<Trace.BreadCrumb> = [];\r\n\r\n  private _config: Trace.Config;\r\n  private wrappedBuiltIns: Array<any> = [];\r\n\r\n  private clickEventSelectors: Array<string>;\r\n  private changeEventSelectors: Array<string>;\r\n\r\n  private lastEvent: Event = null;\r\n  private lastHref: string = '';\r\n\r\n  constructor(config: Trace.Config) {\r\n    this._config = config;\r\n    this.getDomBreadcrumbs();\r\n    this.getXhrBreadcrumbs();\r\n    this.getLocationBreadcurmbs();\r\n    this.getConsoleBreadcrumbs();\r\n  }\r\n\r\n  /**\r\n   * 获取事件操作并写入面包屑\r\n   * @private\r\n   */\r\n  private getDomBreadcrumbs(): void {\r\n    if (!this._config.autoBreadcrumbs.dom) return;\r\n\r\n    this.clickEventSelectors = ['a', 'button', 'input[button]', 'input[submit]', 'input[radio]', 'input[checkbox]'];\r\n    this.changeEventSelectors = ['input[text]', 'input[password]', 'textarea', 'select'];\r\n\r\n    if (document.addEventListener) {\r\n      document.addEventListener('click', (event: MouseEvent) => {\r\n        this.eventHandler('click', this.clickEventSelectors, event);\r\n      }, true);\r\n      document.addEventListener('blur', (event: MouseEvent) => {\r\n        this.eventHandler('input', this.changeEventSelectors, event)\r\n      }, true);\r\n    } else {\r\n      // IE8\r\n      document['attachEvent']('onclick', (event: MouseEvent) => {\r\n        this.eventHandler('click', this.clickEventSelectors, event);\r\n      });\r\n      document['attachEvent']('onblur', (event: MouseEvent) => {\r\n        this.eventHandler('click', this.clickEventSelectors, event);\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @private\r\n   * @param {string} eventName \r\n   * @param {Array<string>} selectorFilters \r\n   * @param {MouseEvent} event \r\n   */\r\n  private eventHandler(eventName: string, selectorFilters: Array<string>, event: MouseEvent): void {\r\n    const target = event.target || event.srcElement;\r\n    const tagName: string = (target as HTMLElement).tagName.toLowerCase();\r\n\r\n    if (this.acceptTag(target as HTMLElement, selectorFilters)) {\r\n      const attributes = getAttributes(target as HTMLElement);\r\n      let inputElement = target as HTMLInputElement;\r\n\r\n      const result: Trace.BreadCrumb = {\r\n        category: `ui.${eventName}`,\r\n        htmlTree: htmlTreeAsString(target as HTMLElement)\r\n      }\r\n\r\n      this.captureBreadcrumb(result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 查看某个元素是否在要监控的元素类型列表中\r\n   * @private\r\n   * @param {HTMLElement} element - 要检测的元素\r\n   * @param {Array<string>} selectors - 元素列表字符串\r\n   * @returns {boolean} - 检测结果\r\n   */\r\n  private acceptTag(element: HTMLElement, selectors: Array<string>): boolean {\r\n    let tag: string = element.tagName.toLowerCase();\r\n    if (tag === 'input' && element.getAttribute('type')) {\r\n      tag += `[${element.getAttribute('type')}]`\r\n    }\r\n    return selectors.indexOf(tag) > -1;\r\n  }\r\n\r\n\r\n  /**\r\n   * 获取事件操作并写入面包屑\r\n   */\r\n  private getXhrBreadcrumbs() {\r\n    if (!this._config.autoBreadcrumbs.xhr) return;\r\n\r\n    const self = this;\r\n    const autoBreadcrumbs = this._config.autoBreadcrumbs;\r\n    const wrappedBuiltIns = this.wrappedBuiltIns;\r\n    const xhrproto = XMLHttpRequest.prototype;\r\n\r\n    function wrapProp(prop, xhr) {\r\n      if (prop in xhr && typeof (xhr[prop]) === 'function') {\r\n        polyfill(xhr, prop, function (origin) {\r\n          return wrap(origin);\r\n        });\r\n      }\r\n    }\r\n\r\n    // 复制改下 xhr open 用于监听\r\n    polyfill(xhrproto, 'open', function (origOpen: any) {\r\n      return function (method: string, url: string) {\r\n\r\n        this._trace_xhr = {\r\n          method: method,\r\n          url: url,\r\n          statusCode: null\r\n        };\r\n        return origOpen.apply(this, arguments);\r\n      };\r\n    }, wrappedBuiltIns);\r\n\r\n    // 复制改下 xhr send 用于监听\r\n    polyfill(xhrproto, 'send', function (origSend) {\r\n      return function (data) {\r\n        var xhr = this;\r\n        function onreadystatechangeHandler() {\r\n          if (xhr._trace_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\r\n            xhr._trace_xhr.statusCode = xhr.status;\r\n            self.captureBreadcrumb({\r\n              type: 'http',\r\n              category: 'xhr',\r\n              data: xhr._trace_xhr\r\n            });\r\n          }\r\n        }\r\n\r\n        const props = ['onload', 'onerror', 'onprogress'];\r\n        for (var j = 0; j < props.length; j++) {\r\n          wrapProp(props[j], xhr);\r\n        }\r\n\r\n        if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\r\n          polyfill(xhr, 'onreadystatechange', function (origin) {\r\n            return wrap(origin, undefined, onreadystatechangeHandler);\r\n          })\r\n        } else {\r\n          xhr.onreadystatechange = onreadystatechangeHandler;\r\n        }\r\n        return origSend.apply(this, arguments);\r\n      };\r\n    }, wrappedBuiltIns);\r\n  }\r\n\r\n  private getLocationBreadcurmbs() {\r\n    if (!this._config.autoBreadcrumbs.location) return;\r\n\r\n    const wrappedBuiltIns = this.wrappedBuiltIns;\r\n    const self = this;\r\n    const chrome = window['chrome'];\r\n    const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\r\n    const hasPushState = !isChromePackagedApp && window.history && history.pushState;\r\n    if (hasPushState) {\r\n      var oldOnPopState = window.onpopstate;\r\n      window.onpopstate = function () {\r\n        var currentHref = location.href;\r\n        self.captureUrlChange(self.lastHref, currentHref);\r\n        if (oldOnPopState) {\r\n          return oldOnPopState.apply(this, arguments);\r\n        }\r\n      };\r\n\r\n      polyfill(history, 'pushState', function (origPushState) {\r\n        // note history.pushState.length is 0; intentionally not declaring\r\n        // params to preserve 0 arity\r\n        return function (/* state, title, url */) {\r\n          var url = arguments.length > 2 ? arguments[2] : undefined;\r\n\r\n          // url argument is optional\r\n          if (url) {\r\n            // coerce to string (this is what pushState does)\r\n            self.captureUrlChange(self.lastHref, url + '');\r\n          }\r\n\r\n          return origPushState.apply(this, arguments);\r\n        };\r\n      }, wrappedBuiltIns);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\r\n   * @param to the originating URL\r\n   * @param from the target URL\r\n   * @private\r\n   */\r\n  private captureUrlChange(from, to) {\r\n    var parsedLoc = parseUrl(location.href);\r\n    var parsedTo = parseUrl(to);\r\n    var parsedFrom = parseUrl(from);\r\n\r\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\r\n    // not the previous (from) value, we need to track the value of the current URL\r\n    // state ourselves\r\n    this.lastHref = to;\r\n\r\n    // Use only the path component of the URL if the URL matches the current\r\n    // document (almost all the time when using pushState)\r\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\r\n      to = parsedTo.relative;\r\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\r\n      from = parsedFrom.relative;\r\n\r\n    this.captureBreadcrumb({\r\n      category: 'navigation',\r\n      data: {\r\n        to: to,\r\n        from: from\r\n      }\r\n    });\r\n  }\r\n\r\n  private getConsoleBreadcrumbs() {\r\n    if (!this._config.autoBreadcrumbs.console) return;\r\n    if ('console' in window && console.log) {\r\n      const consoleMethodCallback = (msg, data) => {\r\n        this.captureBreadcrumb({\r\n          message: msg,\r\n          level: data.level,\r\n          category: 'console'\r\n        });\r\n      };\r\n      ['debug', 'info', 'warn', 'error', 'log'].forEach((item) => {\r\n        this.wrapConsole(console, item, consoleMethodCallback);\r\n      })\r\n    }\r\n  }\r\n\r\n  private wrapConsole(console, level, callback) {\r\n    const originalConsoleLevel = console[level];\r\n    const originalConsole = console;\r\n\r\n    if (!(level in console)) {\r\n      return;\r\n    }\r\n\r\n    var sentryLevel = level === 'warn'\r\n      ? 'warning'\r\n      : level;\r\n\r\n    console[level] = function () {\r\n      var args = [].slice.call(arguments);\r\n\r\n      var msg = '' + args.join(' ');\r\n      var data = { level: sentryLevel, logger: 'console', extra: { 'arguments': args } };\r\n      callback && callback(msg, data);\r\n\r\n      // this fails for some browsers. :(\r\n      if (originalConsoleLevel) {\r\n        // IE9 doesn't allow calling apply on console functions directly\r\n        // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\r\n        Function.prototype.apply.call(\r\n          originalConsoleLevel,\r\n          originalConsole,\r\n          args\r\n        );\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n   * 写入面包屑\r\n   * @private\r\n   * @param {Trace.BreadCrumb} crumb \r\n   */\r\n  private captureBreadcrumb(crumb: Trace.BreadCrumb): void {\r\n    let _crumb = objectAssign({}, crumb, { timestamp: new Date().getTime() });\r\n    this.crumbsData.push(_crumb);\r\n\r\n    // 超出后删除最先记录的一个\r\n    if (this.crumbsData.length > this._config.maxBreadcrumbs) {\r\n      this.crumbsData.shift()\r\n    }\r\n  }\r\n}","import { makeRequest } from './request';\r\nimport { environment } from './environment';\r\nimport { BreadCrumbs } from './breadcrumbs';\r\nimport { triggerEvent, guid } from './util';\r\nconst objectAssign = Object.assign || require('object-assign');\r\nimport Tracekit from './tracekit';\r\n\r\nexport class Report {\r\n  private _config: Trace.Config;\r\n  private Tracekit = Tracekit;\r\n  private breadcrumbs: BreadCrumbs;\r\n\r\n  private lastGuid: string = null;\r\n  private lastReport: Trace.Report = null;\r\n\r\n  constructor(config: Trace.Config) {\r\n    this._config = config;\r\n    Tracekit['report'].subscribe((errorReport: any) => {\r\n      this.handleStackInfo(errorReport)\r\n    })\r\n    this.breadcrumbs = new BreadCrumbs(config);\r\n  }\r\n\r\n  /**\r\n   * 处理栈信息\r\n   * @private\r\n   * @param {TraceKit.StackTrace} stackInfo TraceKit获取的栈信息\r\n   */\r\n  public handleStackInfo(stackInfo: TraceKit.StackTrace): void {\r\n    let frames: Array<Trace.StackFrame> = this.prepareFrames(stackInfo);\r\n\r\n    triggerEvent('handle', { stackInfo });\r\n\r\n    this.processException(stackInfo.name, stackInfo.message, stackInfo.url, frames)\r\n  }\r\n\r\n  /**\r\n   * 设置栈帧数据集\r\n   * @private\r\n   * @param {TraceKit.StackTrace} stackInfo TraceKit获取的栈信息\r\n   * @returns {Trace.StackFrame[]} \r\n   */\r\n  public prepareFrames(stackInfo: TraceKit.StackTrace): Trace.StackFrame[] {\r\n    let frames: Array<Trace.StackFrame> = [];\r\n    if (stackInfo.stack && stackInfo.stack.length) {\r\n      stackInfo.stack.forEach(item => {\r\n        let frame = this.normalizeFrame(item);\r\n        if (frame) frames.push(frame)\r\n      });\r\n    }\r\n    frames = frames.slice(0, this._config.maxStackDepth);\r\n    return frames;\r\n  }\r\n\r\n  /**\r\n   * 统一自定义栈帧结构\r\n   * @private\r\n   * @param {TraceKit.StackFrame} frame - TraceKit获取的栈帧\r\n   * @returns {Trace.StackFrame} - 统一后的栈帧对象\r\n   */\r\n  private normalizeFrame(frame: TraceKit.StackFrame): Trace.StackFrame {\r\n    if (!frame.url) return;\r\n    const normalized = {\r\n      fileName: frame.url,\r\n      lineNumber: frame.line,\r\n      columnNumber: frame.column,\r\n      function: frame.func || '?'\r\n    }\r\n    return normalized;\r\n  }\r\n\r\n  /**\r\n   * 处理异常\r\n   * @private\r\n   * @param {string} type - 异常类型\r\n   * @param {string} message - 异常信息\r\n   * @param {string} fileName - 异常路径\r\n   * @param {Array<Trace.StackFrame>} frames - 异常栈帧数据集\r\n   */\r\n  private processException(type: string, message: string, fileName: string, frames: Array<Trace.StackFrame>): void {\r\n    let config = this._config;\r\n    let stacktrace: Array<Trace.StackFrame> = [];\r\n    if (!!(config.ignoreErrors as RegExp).test && (config.ignoreErrors as RegExp).test(message)) return;\r\n\r\n    message += '';\r\n\r\n    if (frames && frames.length) {\r\n      fileName = frames[0].fileName || fileName;\r\n      frames.reverse(); // 倒序排列\r\n      stacktrace = frames;\r\n    } else if (fileName) {\r\n      stacktrace.push({\r\n        fileName\r\n      })\r\n    }\r\n\r\n    if (!!(config.ignoreUrls as RegExp).test && (config.ignoreUrls as RegExp).test(fileName)) return;\r\n\r\n    let exception: Array<Trace.CatchedException> = [{ type, message, stacktrace }];\r\n\r\n    // 处理报告数据\r\n    this.handlePayload(exception);\r\n  }\r\n\r\n  /**\r\n   * 处理报告数据\r\n   * @private\r\n   * @param {Array<Trace.CatchedException>} exception \r\n   */\r\n  public handlePayload(exception: Array<Trace.CatchedException>) {\r\n    // 合并报告\r\n    const reportData: Trace.Report = {\r\n      url: location.href,\r\n      title: document.title,\r\n      environment,\r\n      exception,\r\n      version: this._config.version,\r\n      apiKey: this._config.apiKey,\r\n      timestamp: new Date().getTime(),\r\n      guid: guid(),\r\n      breadcrumbs: this.breadcrumbs.crumbsData,\r\n    }\r\n    // 发送报告\r\n    this.sendPayload(reportData)\r\n  }\r\n\r\n  /**\r\n   * 发送报告\r\n   * @private\r\n   * @param {Trace.Report} payload\r\n   */\r\n  private sendPayload(payload: Trace.Report) {\r\n    this.lastGuid = payload.guid;\r\n    if (!this._config.repeatReport && this.isRepeatReport(payload)) return;\r\n\r\n    this.lastReport = payload;\r\n    const requestOptions = {\r\n      url: this._config.reportUrl,\r\n      data: payload,\r\n      onSuccess: () => {\r\n        triggerEvent('success', {\r\n          data: payload,\r\n          src: this._config.reportUrl\r\n        })\r\n        return new Promise(() => { });\r\n      },\r\n      OnError: (error) => {\r\n        triggerEvent('failure', {\r\n          data: payload,\r\n          src: this._config.reportUrl\r\n        })\r\n        error = error || new Error(`Trace: report sending failed!`);\r\n        return new Promise(resolve => resolve(error))\r\n      }\r\n    }\r\n    // 发送报告请求\r\n    makeRequest(requestOptions);\r\n  }\r\n\r\n  /**\r\n   * 判断两份报告是否重复\r\n   * @private\r\n   * @param {Trace.Report} current \r\n   * @returns {boolean} \r\n   */\r\n  private isRepeatReport(current: Trace.Report): boolean {\r\n    const last = this.lastReport;\r\n\r\n    // 如果最后一次报告没有或者两个 report 的 URL 都不相同直接返回 false\r\n    if (!last || current.url !== last.url) return false;\r\n\r\n    if (current.exception || last.exception) {\r\n      return this.isSameException(current.exception, last.exception);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 判断两个异常数据集是否重复\r\n   * @private\r\n   * @param {Trace.CatchedException[]} arrayEx1 \r\n   * @param {Trace.CatchedException[]} arrayEx2 \r\n   * @returns {boolean} \r\n   */\r\n  private isSameException(arrayEx1: Trace.CatchedException[], arrayEx2: Trace.CatchedException[]): boolean {\r\n    if (!arrayEx1.length || !arrayEx2.length) return false;\r\n\r\n    const ex1: Trace.CatchedException = arrayEx1[0];\r\n    const ex2: Trace.CatchedException = arrayEx2[0];\r\n\r\n    if (ex1.type !== ex2.type || ex1.message !== ex2.message) return false;\r\n\r\n    return this.isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\r\n  }\r\n\r\n  /**\r\n   * 判断两个栈帧数据集是否重复\r\n   * @private\r\n   * @param {Trace.StackFrame[]} stacktrace1 \r\n   * @param {Trace.StackFrame[]} stacktrace2 \r\n   * @returns {boolean} \r\n   */\r\n  private isSameStacktrace(stacktrace1: Trace.StackFrame[], stacktrace2: Trace.StackFrame[]): boolean {\r\n    if (!stacktrace1.length || !stacktrace2.length) return false;\r\n\r\n    stacktrace1.forEach((item, index) => {\r\n      if (item.fileName !== stacktrace2[index].fileName ||\r\n        item.columnNumber !== stacktrace2[index].columnNumber ||\r\n        item.lineNumber !== stacktrace2[index].lineNumber ||\r\n        item.function !== stacktrace2[index].function) return false;\r\n    })\r\n\r\n    return true;\r\n  }\r\n}\r\n","export default class Performance {\r\n  public collection = {};\r\n\r\n  constructor() {\r\n    this.getCollection();\r\n  }\r\n\r\n  private getCollection() {\r\n    if (!window.performance) return;\r\n\r\n    const timing = window.performance.timing;\r\n    const navigation = window.performance.navigation;\r\n\r\n    // 重定向时间\r\n    const redirect = timing.redirectEnd - timing.redirectStart;\r\n    // DNS 解析耗时\r\n    const dns = timing.domainLookupEnd - timing.domainLookupStart;\r\n    // TCP 链接耗时\r\n    const tcp = timing.connectEnd - timing.connectStart;\r\n    // TLS 耗时\r\n    const tls = timing.secureConnectionStart - timing.connectStart;\r\n    // 白屏时间\r\n    const firstPaint = timing.responseStart - timing.navigationStart;\r\n    // 总体网络交互耗时\r\n    const network = timing.responseEnd - timing.navigationStart;\r\n    // DOM解析时间\r\n    const dom = timing.domComplete - timing.responseEnd;\r\n    // 首屏时间 (暂不靠谱)\r\n    const firstScreen = timing.domContentLoadedEventEnd - timing.navigationStart;\r\n    // 用户可操作时间\r\n    const interactive = timing.domInteractive - timing.navigationStart;\r\n    // 页面加载时间\r\n    const pageLoad = timing.loadEventEnd - timing.navigationStart;\r\n\r\n    // 重定向次数\r\n    const redirectCount = navigation.redirectCount;\r\n    // 网页的加载来源\r\n    const navigationType = navigation.type;\r\n\r\n    this.collection = {\r\n      timing, redirect, dns, tcp, tls, firstPaint, network, dom, firstScreen, interactive, pageLoad,\r\n      redirectCount, navigationType\r\n    }\r\n  }\r\n}\r\n","import { defaultConfig } from './config';\r\nimport { Report } from './report';\r\nimport { joinRegExp, isError } from './util';\r\nimport Tracekit from './tracekit';\r\nimport Perf from './performance';\r\nconst objectAssign = Object.assign || require('object-assign');\r\n\r\nexport default class Trace {\r\n  private computeStackTrace: TraceKit.ComputeStackTrace = Tracekit['computeStackTrace'];\r\n  private globalConfig: Trace.Config = defaultConfig;\r\n  private onError: Report;\r\n\r\n  public config(config?: Trace.Config) {\r\n    this.globalConfig = objectAssign({}, this.globalConfig, config);\r\n    this.processConfig();\r\n    this.onError = new Report(this.globalConfig);\r\n    const analyticsData = new Perf().collection;\r\n    console.log(analyticsData);\r\n  }\r\n\r\n  public captureException(exception: Error): void {\r\n    if (!isError(exception)) {\r\n      return this.captureMessage(exception as any);\r\n    }\r\n\r\n    try {\r\n      const stack: TraceKit.StackTrace = this.computeStackTrace(exception);\r\n      this.onError.handleStackInfo(stack);\r\n    } catch (e) {\r\n      if (exception !== e) throw e;\r\n    }\r\n  }\r\n\r\n  public captureMessage(message: string): void {\r\n    if (!!(this.globalConfig.ignoreErrors as RegExp).test\r\n      && (this.globalConfig.ignoreErrors as RegExp).test(message)) return;\r\n\r\n    let exception: any;\r\n    try {\r\n      throw new Error(message);\r\n    } catch (e) {\r\n      exception = e;\r\n    }\r\n\r\n    let stack = this.computeStackTrace(exception);\r\n    let frames: Trace.StackFrame[] = this.onError.prepareFrames(stack);\r\n\r\n    let catchedException: Trace.CatchedException = {\r\n      stacktrace: frames,\r\n      message\r\n    }\r\n\r\n    this.onError.handlePayload([catchedException]);\r\n  }\r\n\r\n  private processConfig() {\r\n    const ignoreErrors = this.globalConfig.ignoreErrors as Array<RegExp>;\r\n    const ignoreUrls = this.globalConfig.ignoreErrors as Array<RegExp>;\r\n\r\n    ignoreErrors.push(/^Script error\\.?$/);\r\n    ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\r\n    this.globalConfig.ignoreErrors = joinRegExp(ignoreErrors);\r\n\r\n    this.globalConfig.ignoreUrls = ignoreUrls.length && joinRegExp(ignoreUrls);\r\n  }\r\n}\r\n"],"names":["options","request","XMLHttpRequest","window","url","onreadystatechange","readyState","status","onSuccess","onError","error","Error","XDomainRequest","replace","onload","onerror","open","send","JSON","stringify","data","value","Object","prototype","toString","call","crypto","getRandomValues","arr","Uint16Array","pad","num","v","length","c","r","Math","random","eventType","document","_event","key","substr","toUpperCase","createEvent","initEvent","hasOwnProperty","dispatchEvent","toLowerCase","obj","name","replacement","track","origin","push","func","args","i","arguments","deep","apply","this","wrap","e","undefined","trace","track_wrapper","property","process","wrapped","patterns","sources","pattern","source","RegExp","join","element","nextStr","out","height","len","sepLength","htmlElementAsString","parentElement","reverse","className","classes","attr","tagName","id","split","attrWhitelist","getAttribute","match","query","fragment","result","attributes","item","getLocationHref","location","href","defaultConfig","environment","documentElement","clientWidth","body","clientHeight","navigator","userAgent","language","objectAssign","assign","require","config","_config","getDomBreadcrumbs","getXhrBreadcrumbs","getLocationBreadcurmbs","getConsoleBreadcrumbs","autoBreadcrumbs","dom","clickEventSelectors","changeEventSelectors","addEventListener","event","eventHandler","_this","eventName","selectorFilters","target","srcElement","acceptTag","getAttributes","htmlTreeAsString","captureBreadcrumb","selectors","tag","indexOf","prop","xhr","self","wrappedBuiltIns","xhrproto","origOpen","method","_trace_xhr","origSend","statusCode","props","j","onreadystatechangeHandler","chrome","app","runtime","history","pushState","oldOnPopState","onpopstate","currentHref","captureUrlChange","lastHref","origPushState","from","to","parsedLoc","parseUrl","parsedTo","parsedFrom","protocol","host","relative","console","log","consoleMethodCallback","msg","level","forEach","wrapConsole","callback","originalConsoleLevel","originalConsole","sentryLevel","slice","logger","extra","crumb","_crumb","timestamp","Date","getTime","crumbsData","maxBreadcrumbs","shift","TraceKit","_window","global","_slice","UNKNOWN_FUNCTION","ERROR_TYPES_RE","report","subscribe","handler","unsubscribe","handlers","splice","unsubscribeAll","notifyHandlers","stack","isWindowError","exception","collectWindowErrors","concat","inner","traceKitWindowOnError","message","lineNo","colNo","ex","lastExceptionStack","computeStackTrace","augmentStackTraceWithInitialElement","groups","_oldOnerrorHandler","installGlobalHandler","_onErrorHandlerInstalled","uninstallGlobalHandler","processLastException","_lastExceptionStack","_lastArgs","lastArgs","rethrow","lastException","incomplete","uninstall","computeStackTraceFromStackProp","submatch","parts","gecko","winjs","chromeEval","lines","exec","isNative","isEval","geckoEval","columnNumber","column","line","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","input","substring","sourceURL","fileName","lineNumber","description","debug","Tracekit","errorReport","handleStackInfo","breadcrumbs","BreadCrumbs","frames","prepareFrames","processException","frame","_this2","normalizeFrame","maxStackDepth","type","stacktrace","ignoreErrors","test","ignoreUrls","handlePayload","reportData","title","version","apiKey","guid","sendPayload","payload","lastGuid","repeatReport","isRepeatReport","lastReport","reportUrl","_this3","Promise","resolve","current","last","isSameException","arrayEx1","arrayEx2","ex1","ex2","isSameStacktrace","stacktrace1","stacktrace2","index","function","getCollection","performance","timing","navigation","redirect","redirectEnd","redirectStart","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","tls","secureConnectionStart","firstPaint","responseStart","navigationStart","network","responseEnd","domComplete","firstScreen","domContentLoadedEventEnd","interactive","domInteractive","pageLoad","loadEventEnd","redirectCount","navigationType","collection","globalConfig","processConfig","Report","analyticsData","Perf","isError","captureMessage","catchedException","joinRegExp"],"mappings":"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"}