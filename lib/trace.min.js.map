{"version":3,"file":"trace.min.js","sources":["../src/util.ts","../src/request.ts","../src/config.ts","../src/performance.ts","../src/breadcrumbs.ts","../src/environment.ts","../src/report.ts","../src/exception.ts","../src/index.ts"],"sourcesContent":["\n/**\n * 是否为IE浏览器\n * @returns {boolean} \n */\nexport function isIE(): boolean {\n  return navigator.appVersion.indexOf(\"MSIE\") !== -1;\n}\n\nexport function isError(value: any): boolean {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]': return true;\n    case '[object Exception]': return true;\n    case '[object DOMException]': return true;\n    default: return value instanceof Error;\n  }\n}\n\n/**\n * 生产唯一ID\n * @returns {string} - 唯一guid\n */\nexport function guid(): string {\n  var crypto = window.crypto || window['msCrypto'];\n\n  if (crypto && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    arr[3] = arr[3] & 0xFFF | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    arr[4] = arr[4] & 0x3FFF | 0x8000;\n\n    var pad = function (num) {\n      var v = num.toString(16);\n      while (v.length < 4) {\n        v = '0' + v;\n      }\n      return v;\n    };\n\n    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) +\n      pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n  } else {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n        v = c === 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n\n/**\n * 文档绑定自定义事件\n * @export\n * @param {string} eventType \n * @param {Object} [options={}] \n * @returns {void} \n */\nexport function triggerEvent(eventType: string, options: Object = {}): void {\n  if (!document) return;\n\n  let _event: Event;\n  let key: string;\n\n  eventType = eventType.substr(0, 1).toUpperCase + eventType.substr(1);\n\n  if (document.createEvent) {\n    _event = document.createEvent('HTMLEvents');\n    _event.initEvent(eventType, true, true);\n  } else {\n    // IE8-9\n    _event = document['createEventObject']();\n    (_event as any).eventType = eventType;\n  }\n\n  for (key in options) {\n    if (options.hasOwnProperty(key)) {\n      _event[key] = options[key];\n    }\n  }\n\n  if (document.createEvent) {\n    document.dispatchEvent(_event);\n  } else {\n    document['fireEvent']('on' + (_event as any).eventType.toLowerCase(), _event);\n  }\n}\n\n/**\n * 原生方法垫片\n * @param {Object} obj - 内置对象，例：`window`, `document`\n * @param {string} name - 内置对象的函数名称，例：`addEventListener`\n * @param {Function} replacement - 替换后的函数\n * @param {*} [track] - record instrumentation to an array\n */\nexport function polyfill(obj: Object, name: string, replacement: Function, track?: any): void {\n  const origin = obj[name];\n  obj[name] = replacement(origin);\n  if (track) {\n    track.push([obj, name, origin]);\n  }\n}\n\nexport function wrap(options: any, func?: any, origin?: any) {\n  if (!func && typeof options !== 'function') return options;\n\n  if (typeof options === 'function') {\n    func = options;\n    options = undefined;\n  }\n\n  if (typeof func !== 'function') return func;\n\n  try {\n    if (func.trace) return func;\n    if (func.track_wrapper) return func.track_wrapper;\n  } catch (e) {\n    return func;\n  }\n\n  function wrapped() {\n    let trace, inner;\n    var args = [], i = arguments.length,\n      deep = !options || options && options.deep !== false;\n\n    if (origin && typeof origin === 'function') {\n      origin.apply(this, arguments);\n    }\n\n    while (i--) args[i] = deep ? wrap(options, arguments[i]) : arguments[i];\n\n    try {\n      return func.apply(this, args);\n    } catch (e) {\n      // self._ignoreNextOnError();\n      // self.captureException(e, options);\n      throw e;\n    }\n\n  }\n  // copy over properties of the old function\n  for (var property in func) {\n    if (func.hasOwnProperty(process)) {\n      wrapped[property] = func[property];\n    }\n  }\n  wrapped.prototype = func.prototype;\n\n  func.track_wrapper = wrapped;\n  // Signal that this function has been wrapped already\n  // for both debugging and to prevent it to being wrapped twice\n  // wrapped.trace = true;\n  // wrapped.inner = func;\n\n  return wrapped;\n}\n\n\n/**\n * \n * @param {Array<RegExp>} patterns \n * @returns {RegExp} \n */\nexport function joinRegExp(patterns: Array<RegExp>): RegExp {\n  let sources = [];\n  let pattern;\n  for (let i = 0; i < patterns.length; i++) {\n    pattern = patterns[i];\n    if (typeof pattern === 'string') {\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n    } else if (pattern && pattern.source) {\n      // If it's a regexp already, we want to extract the source\n      sources.push(pattern.source);\n    }\n  }\n  return new RegExp(sources.join('|'), 'i');\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nexport function htmlTreeAsString(element: HTMLElement): string {\n  var MAX_TRAVERSE_HEIGHT = 5,\n    MAX_OUTPUT_LEN = 80,\n    out = [],\n    height = 0,\n    len = 0,\n    separator = ' > ',\n    sepLength = separator.length,\n    nextStr;\n\n  while (element && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = htmlElementAsString(element);\n    if (nextStr === 'html' || height > 1 && len + (out.length * sepLength) + nextStr.length >= MAX_OUTPUT_LEN) {\n      break;\n    }\n\n    out.push(nextStr);\n\n    len += nextStr.length;\n    element = element.parentElement;\n  }\n\n  return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(element: HTMLElement): string {\n  var out = [],\n    className,\n    classes,\n    key,\n    attr,\n    i;\n\n  if (!element || !element.tagName) {\n    return '';\n  }\n\n  out.push(element.tagName.toLowerCase());\n  if (element.id) {\n    out.push('#' + element.id);\n  }\n\n  className = element.className;\n  if (className && typeof className === 'string') {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push('.' + classes[i]);\n    }\n  }\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = element.getAttribute(key);\n    if (attr) {\n      out.push('[' + key + '=\"' + attr + '\"]');\n    }\n  }\n  return out.join('');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nexport function parseUrl(url: string) {\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n  if (!match) return;\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    protocol: match[2],\n    host: match[4],\n    path: match[5],\n    relative: match[5] + query + fragment // everything minus origin\n  };\n}\n\n/**\n * 获取元素的属性值 \n * @param {HTMLElement} element  - 需要获取属性的元素\n * @returns {Object} - 属性键值对象\n */\nexport function getAttributes(element: HTMLElement): Object {\n  const result: Object = {};\n  const attributes: NamedNodeMap = element.attributes;\n\n  for (let i = 0; i < attributes.length; i++) {\n    const item = attributes[i];\n    result[item.name] = item.value;\n  }\n\n  return result;\n}","export function makeRequest(options: any):void {\n  let request:XMLHttpRequest = new XMLHttpRequest();\n  const hasCORS:boolean = 'withCredentials' in request || typeof window['XDomainRequest'] !== 'undefined';\n\n  if (!hasCORS) return;\n\n  let url = options.url;\n  if ('withCredentials' in request) {\n    request.onreadystatechange = () => {\n      if (request.readyState !== 4) {\n        return;\n      } else if (request.status === 200) {\n        options.onSuccess = options.onSuccess();\n      } else if (options.onError) {\n        let error: any = new Error(`Error: ${request.status}`);\n        error.request = request;\n        options.onError(error);\n      }\n    }\n  } else {\n    // xdomainrequest cannot go http -> https (or vice versa),\n    // so always use protocol relative\n    request = new (window as any).XDomainRequest();\n    url = url.replace(/^https?:/, '');\n\n    // onreadystatechange not supported by XDomainRequest\n    if(options.onSuccess) request.onload = options.onSuccess;\n    if(options.onError) {\n      request.onerror = () => {\n        let error: any = new Error(`Error: XDomainRequest`);\n        error.request = request;\n        options.onError(error);\n      }\n    }\n  }\n\n  request.open('POST', url, true);\n  request.send(JSON.stringify(options.data));\n}\n","\nexport const defaultConfig: Trace.Config = {\n  apiKey: '',\n  exceptionUrl: 'http://localhost:3001/tracer/error',\n  performanceUrl: 'http://localhost:3001/api/perf/create',\n  ignoreErrors: [],\n  ignoreUrls: [],\n  autoBreadcrumbs: {\n    dom: true,\n    xhr: true,\n    location: true,\n    console: false\n  },\n  releaseStage: 'production',\n  catchAjax: true,\n  catchConsole: true,\n  maxStackDepth: 10,\n  repeatReport: false,\n  maxBreadcrumbs: 100\n}\n","import { makeRequest } from './request';\nimport { triggerEvent } from './util';\n\nexport default class Performance {\n  public collection: Object;\n  public config: Trace.Config;\n\n  /**\n   * Creates an instance of Performance.\n   * @param {Trace.Config} config \n   */\n  constructor(config: Trace.Config) {\n    this.config = config;\n    this.getCollection();\n  }\n\n  /**\n   * Sending performance payload using xhr or beacon\n   * @returns {void} \n   */\n  public payloadSending(): void {\n    if (!this.collection || this.collection['dom'] < 0) return;\n\n    const data = JSON.stringify(this.collection);\n    if (window.navigator && window.navigator.sendBeacon) {\n      console.log('url change')\n      window.navigator.sendBeacon(this.config.performanceUrl, data);\n    } else {\n      const requestOptions = {\n        url: this.config.performanceUrl,\n        data,\n        onSuccess: () => {\n          triggerEvent('success', {\n            data,\n            src: this.config.performanceUrl\n          })\n          return new Promise(() => { });\n        },\n        OnError: (error) => {\n          triggerEvent('failure', {\n            data,\n            src: this.config.performanceUrl\n          })\n          error = error || new Error(`发送上报请求失败`);\n          return new Promise(resolve => resolve(error))\n        }\n      }\n      // 发送报告请求\n      makeRequest(requestOptions);\n    }\n  }\n\n  /**\n   * Collect performance metrics data\n   * @returns {void} \n   */\n  private getCollection(): void {\n    if (!window.performance) return;\n\n    const timing = window.performance.timing;\n    const navigation = window.performance.navigation;\n    const resource: Array<any> = window.performance.getEntriesByType('resource');\n\n    // 重定向时间\n    const redirect = timing.redirectEnd - timing.redirectStart;\n    // DNS 解析耗时\n    const dns = timing.domainLookupEnd - timing.domainLookupStart;\n    // TCP 链接耗时\n    const tcp = timing.connectEnd - timing.connectStart;\n    // TLS 耗时\n    const tls = timing.secureConnectionStart === 0 ? 0 : timing.secureConnectionStart - timing.connectStart;\n    // 白屏时间\n    const firstPaint = timing.responseStart - timing.navigationStart;\n    // 总体网络交互耗时\n    const network = timing.responseEnd - timing.navigationStart;\n    // DOM解析时间\n    const dom = timing.domComplete - timing.responseEnd;\n    // 首屏时间 (暂不靠谱)\n    const firstScreen = timing.domContentLoadedEventEnd - timing.navigationStart;\n    // 用户可操作时间\n    const interactive = timing.domInteractive - timing.navigationStart;\n    // 页面加载时间\n    const pageLoad = timing.loadEventStart - timing.navigationStart;\n\n    // 重定向次数\n    const redirectCount = navigation.redirectCount;\n    // 网页的加载来源\n    const navigationType = navigation.type;\n\n    let resources: Array<any> = [];\n    resource.forEach(item => {\n      const { initiatorType, name, duration, transferSize } = item;\n      resources.push({\n        url: name,\n        tag: initiatorType,\n        duration: duration.toFixed(2),\n        size: transferSize\n      })\n    });\n\n    this.collection = {\n      redirect, dns, tcp, tls, firstPaint, network, dom, firstScreen, interactive, pageLoad,\n      redirectCount, navigationType,\n      resources,\n      userAgent: window.navigator.userAgent,\n      url: window.location.href,\n      protocol: window.location.protocol,\n      apiKey: this.config.apiKey,\n      domain: window.location.protocol + '//' + window.location.host,\n      timing: JSON.stringify(timing)\n    }\n  }\n}\n","import { getAttributes, htmlTreeAsString, polyfill, wrap, parseUrl } from './util';\nimport Perf from './performance';\n\nexport class BreadCrumbs {\n  public crumbsData: Array<Trace.BreadCrumb> = [];\n\n  private _config: Trace.Config;\n  private wrappedBuiltIns: Array<any> = [];\n\n  private clickEventSelectors: Array<string>;\n  private changeEventSelectors: Array<string>;\n\n  private lastEvent: Event = null;\n  private lastHref: string = '';\n\n  constructor(config: Trace.Config) {\n    this._config = config;\n    this.getDomBreadcrumbs();\n    this.getXhrBreadcrumbs();\n    this.getLocationBreadcurmbs();\n    this.getConsoleBreadcrumbs();\n  }\n\n  /**\n   * 获取事件操作并写入面包屑\n   * @private\n   */\n  private getDomBreadcrumbs(): void {\n    if (!this._config.autoBreadcrumbs.dom) return;\n\n    this.clickEventSelectors = ['a', 'button', 'input[button]', 'input[submit]', 'input[radio]', 'input[checkbox]'];\n    this.changeEventSelectors = ['input[text]', 'input[password]', 'textarea', 'select'];\n\n    if (document.addEventListener) {\n      document.addEventListener('click', (event: MouseEvent) => {\n        this.eventHandler('click', this.clickEventSelectors, event);\n      }, true);\n      document.addEventListener('blur', (event: MouseEvent) => {\n        this.eventHandler('input', this.changeEventSelectors, event)\n      }, true);\n    } else {\n      // IE8\n      document['attachEvent']('onclick', (event: MouseEvent) => {\n        this.eventHandler('click', this.clickEventSelectors, event);\n      });\n      document['attachEvent']('onblur', (event: MouseEvent) => {\n        this.eventHandler('click', this.clickEventSelectors, event);\n      })\n    }\n  }\n\n  /**\n   * \n   * @private\n   * @param {string} eventName \n   * @param {Array<string>} selectorFilters \n   * @param {MouseEvent} event \n   */\n  private eventHandler(eventName: string, selectorFilters: Array<string>, event: MouseEvent): void {\n    const target = event.target || event.srcElement;\n    const tagName: string = (target as HTMLElement).tagName.toLowerCase();\n\n    if (this.acceptTag(target as HTMLElement, selectorFilters)) {\n      const attributes = getAttributes(target as HTMLElement);\n      let inputElement = target as HTMLInputElement;\n\n      const result: Trace.BreadCrumb = {\n        category: `ui.${eventName}`,\n        htmlTree: htmlTreeAsString(target as HTMLElement)\n      }\n\n      this.captureBreadcrumb(result);\n    }\n  }\n\n  /**\n   * 查看某个元素是否在要监控的元素类型列表中\n   * @private\n   * @param {HTMLElement} element - 要检测的元素\n   * @param {Array<string>} selectors - 元素列表字符串\n   * @returns {boolean} - 检测结果\n   */\n  private acceptTag(element: HTMLElement, selectors: Array<string>): boolean {\n    let tag: string = element.tagName.toLowerCase();\n    if (tag === 'input' && element.getAttribute('type')) {\n      tag += `[${element.getAttribute('type')}]`\n    }\n    return selectors.indexOf(tag) > -1;\n  }\n\n  /**\n   * 获取事件操作并写入面包屑\n   */\n  private getXhrBreadcrumbs() {\n    if (!this._config.autoBreadcrumbs.xhr) return;\n\n    const self = this;\n    const autoBreadcrumbs = this._config.autoBreadcrumbs;\n    const wrappedBuiltIns = this.wrappedBuiltIns;\n    const xhrproto = XMLHttpRequest.prototype;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && typeof (xhr[prop]) === 'function') {\n        polyfill(xhr, prop, function (origin) {\n          return wrap(origin);\n        });\n      }\n    }\n\n    // 复制改下 xhr open 用于监听\n    polyfill(xhrproto, 'open', function (origOpen: any) {\n      return function (method: string, url: string) {\n\n        this._trace_xhr = {\n          method: method,\n          url: url,\n          statusCode: null\n        };\n        return origOpen.apply(this, arguments);\n      };\n    }, wrappedBuiltIns);\n\n    // 复制改下 xhr send 用于监听\n    polyfill(xhrproto, 'send', function (origSend) {\n      return function (data) {\n        var xhr = this;\n        function onreadystatechangeHandler() {\n          if (xhr._trace_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n            xhr._trace_xhr.statusCode = xhr.status;\n            self.captureBreadcrumb({\n              type: 'http',\n              category: 'xhr',\n              data: xhr._trace_xhr\n            });\n          }\n        }\n\n        const props = ['onload', 'onerror', 'onprogress'];\n        for (var j = 0; j < props.length; j++) {\n          wrapProp(props[j], xhr);\n        }\n\n        if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n          polyfill(xhr, 'onreadystatechange', function (origin) {\n            return wrap(origin, undefined, onreadystatechangeHandler);\n          })\n        } else {\n          xhr.onreadystatechange = onreadystatechangeHandler;\n        }\n        return origSend.apply(this, arguments);\n      };\n    }, wrappedBuiltIns);\n  }\n\n  private getLocationBreadcurmbs() {\n    if (!this._config.autoBreadcrumbs.location) return;\n\n    const wrappedBuiltIns = this.wrappedBuiltIns;\n    const self = this;\n    const chrome = window['chrome'];\n    const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    const hasPushState = !isChromePackagedApp && window.history && history.pushState;\n    if (hasPushState) {\n      var oldOnPopState = window.onpopstate;\n      window.onpopstate = function () {\n        var currentHref = location.href;\n        self.captureUrlChange(self.lastHref, currentHref);\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      polyfill(history, 'pushState', function (origPushState) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function (/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self.captureUrlChange(self.lastHref, url + '');\n          }\n\n          return origPushState.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n    }\n  }\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  private captureUrlChange(from, to) {\n    var parsedLoc = parseUrl(location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this.lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    const perf = new Perf(this._config);\n    perf.payloadSending();\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  }\n\n  private getConsoleBreadcrumbs() {\n    if (!this._config.autoBreadcrumbs.console) return;\n    if ('console' in window && console.log) {\n      const consoleMethodCallback = (msg, data) => {\n        this.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n      ['debug', 'info', 'warn', 'error', 'log'].forEach((item) => {\n        this.wrapConsole(console, item, consoleMethodCallback);\n      })\n    }\n  }\n\n  private wrapConsole(console, level, callback) {\n    const originalConsoleLevel = console[level];\n    const originalConsole = console;\n\n    if (!(level in console)) {\n      return;\n    }\n\n    var sentryLevel = level === 'warn'\n      ? 'warning'\n      : level;\n\n    console[level] = function () {\n      var args = [].slice.call(arguments);\n\n      var msg = '' + args.join(' ');\n      var data = { level: sentryLevel, logger: 'console', extra: { 'arguments': args } };\n      callback && callback(msg, data);\n\n      // this fails for some browsers. :(\n      if (originalConsoleLevel) {\n        // IE9 doesn't allow calling apply on console functions directly\n        // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n        Function.prototype.apply.call(\n          originalConsoleLevel,\n          originalConsole,\n          args\n        );\n      }\n    };\n  };\n\n  /**\n   * 写入面包屑\n   * @private\n   * @param {Trace.BreadCrumb} crumb \n   */\n  private captureBreadcrumb(crumb: Trace.BreadCrumb): void {\n    let _crumb = Object.assign({}, crumb, { timestamp: new Date().getTime() });\n    this.crumbsData.push(_crumb);\n\n    // 超出后删除最先记录的一个\n    if (this.crumbsData.length > this._config.maxBreadcrumbs) {\n      this.crumbsData.shift()\n    }\n  }\n}","export const environment: Trace.Environment = {\n  /** 屏幕宽度 */\n  screenWidth: (document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth),\n  /** 屏幕高度 */\n  screenHeigth: (document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight),\n  /** 浏览器信息 */\n  userAgent: navigator.userAgent,\n  /** 浏览器语言 */\n  language: navigator.language\n}\n","import { BreadCrumbs } from './breadcrumbs';\nimport { Exception } from './exception';\nimport { environment } from './environment';\nimport { makeRequest } from './request';\nimport { triggerEvent, guid } from './util';\n// import Tracekit from './tracekit';\n\nexport class Report {\n  private config: Trace.Config;\n  // private Tracekit = Tracekit;\n  private breadcrumbs: BreadCrumbs;\n\n  private lastGuid: string = null;\n  private lastReport: Trace.Report = null;\n\n  constructor(config: Trace.Config) {\n    this.config = config;\n    // Tracekit['report'].subscribe((errorReport: any) => {\n    //   this.handleStackInfo(errorReport)\n    // })\n    // const exception = new Exception();\n    // exception.handleWindowOnError();\n    // console.log(exception.stackInfo)\n    // setTimeout(() => console.log(exception.stackInfo), 1000);\n    // this.handleStackInfo(exception.stackInfo);\n    this.breadcrumbs = new BreadCrumbs(config);\n  }\n\n  /**\n   * 处理栈信息\n   * @private\n   * @param {Trace.StackInfo} stackInfo TraceKit获取的栈信息\n   */\n  public handleStackInfo(stackInfo: Trace.StackInfo): void {\n    let frames: Array<Trace.StackFrame> = this.prepareFrames(stackInfo);\n\n    triggerEvent('handle', { stackInfo });\n    const { type, message, url, lineNumber, columnNumber } = stackInfo;\n    this.handleException(type, message, url, lineNumber, columnNumber, frames)\n  }\n\n  /**\n   * 处理报告数据\n   * @private\n   * @param {Trace.CatchedException} exception \n   */\n  public handlePayload(exception: Trace.CatchedException) {\n    // 合并报告\n    const reportData: Trace.Report = {\n      url: location.href,\n      title: document.title,\n      environment,\n      exception,\n      version: this.config.version,\n      apiKey: this.config.apiKey,\n      timestamp: new Date().getTime(),\n      guid: guid(),\n      breadcrumbs: this.breadcrumbs.crumbsData,\n    }\n    // 发送报告\n    this.sendPayload(reportData)\n  }\n\n  /**\n   * 设置栈帧数据集长度\n   * @private\n   * @param {Trace.StackInfo} stackInfo TraceKit获取的栈信息\n   * @returns {Trace.StackFrame[]} \n   */\n  public prepareFrames(stackInfo: Trace.StackInfo): Trace.StackFrame[] {\n    const { stacktrace } = stackInfo\n    let frames: Array<Trace.StackFrame> = [];\n    if (stacktrace.frames && stacktrace.frames.length) {\n      stacktrace.frames.forEach(item => {\n        frames.push(item)\n      });\n    }\n    frames = frames.slice(0, this.config.maxStackDepth);\n    return frames;\n  }\n\n  /**\n   * Handle exception\n   * @param {string} type \n   * @param {string} message \n   * @param {string} url \n   * @param {number} lineno \n   * @param {Array<Trace.StackFrame>} frames \n   * @returns {void} \n   */\n  private handleException(type: string, message: string, fileName: string, lineNumber: number, columnNumber: number, frames: Array<Trace.StackFrame>): void {\n    let config = this.config;\n    let stacktrace: Trace.StackTrace;\n    if (!!(config.ignoreErrors as RegExp).test && (config.ignoreErrors as RegExp).test(message)) return;\n\n    message += '';\n\n    if (frames && frames.length) {\n      fileName = frames[0].fileName || fileName;\n      frames.reverse(); // 倒序排列\n      stacktrace = { frames };\n    } else if (fileName) {\n      stacktrace = {\n        frames: [{ fileName, lineNumber, columnNumber }]\n      }\n    }\n    if (!!(config.ignoreUrls as RegExp).test && (config.ignoreUrls as RegExp).test(fileName)) return;\n    let exception: Trace.CatchedException = {\n      type,\n      message,\n      stacktrace\n    }\n    // 处理报告数据\n    this.handlePayload(exception);\n  }\n\n  /**\n   * 发送报告\n   * @private\n   * @param {Trace.Report} payload\n   */\n  private sendPayload(payload: Trace.Report) {\n    this.lastGuid = payload.guid;\n    if (!this.config.repeatReport && this.isRepeatReport(payload)) return;\n\n    this.lastReport = payload;\n    const requestOptions = {\n      url: this.config.exceptionUrl,\n      data: payload,\n      onSuccess: () => {\n        triggerEvent('success', {\n          data: payload,\n          src: this.config.exceptionUrl\n        })\n        return new Promise(() => { });\n      },\n      OnError: (error) => {\n        triggerEvent('failure', {\n          data: payload,\n          src: this.config.exceptionUrl\n        })\n        error = error || new Error(`Trace: report sending failed!`);\n        return new Promise(resolve => resolve(error))\n      }\n    }\n    // 发送报告请求\n    makeRequest(requestOptions);\n  }\n\n  /**\n   * 判断两份报告是否重复\n   * @private\n   * @param {Trace.Report} current \n   * @returns {boolean} \n   */\n  private isRepeatReport(current: Trace.Report): boolean {\n    const last = this.lastReport;\n\n    // 如果最后一次报告没有或者两个 report 的 URL 都不相同直接返回 false\n    if (!last || current.url !== last.url) return false;\n\n    if (current.exception || last.exception) {\n      return this.isSameException(current.exception, last.exception);\n    }\n    return true;\n  }\n\n  /**\n   * 判断两个异常数据集是否重复\n   * @private\n   * @param {Trace.CatchedException[]} arrayEx1 \n   * @param {Trace.CatchedException[]} arrayEx2 \n   * @returns {boolean} \n   */\n  private isSameException(arrayEx1: Trace.CatchedException, arrayEx2: Trace.CatchedException): boolean {\n    if (!arrayEx1 || !arrayEx2) return false;\n\n    const ex1: Trace.CatchedException = arrayEx1;\n    const ex2: Trace.CatchedException = arrayEx2;\n\n    if (ex1.type !== ex2.type || ex1.message !== ex2.message) return false;\n\n    return this.isSameStacktrace(ex1.stacktrace.frames, ex2.stacktrace.frames);\n  }\n\n  /**\n   * 判断两个栈帧数据集是否重复\n   * @private\n   * @param {Trace.StackFrame[]} stacktrace1 \n   * @param {Trace.StackFrame[]} stacktrace2 \n   * @returns {boolean} \n   */\n  private isSameStacktrace(stacktrace1: Trace.StackFrame[], stacktrace2: Trace.StackFrame[]): boolean {\n    if (!stacktrace1.length || !stacktrace2.length) return false;\n\n    stacktrace1.forEach((item, index) => {\n      if (item.fileName !== stacktrace2[index].fileName ||\n        item.columnNumber !== stacktrace2[index].columnNumber ||\n        item.lineNumber !== stacktrace2[index].lineNumber ||\n        item.func !== stacktrace2[index].func) return false;\n    })\n\n    return true;\n  }\n}\n","import { Report } from './report';\n\n/**\n * Most of all are borrowed from Tracekit\n * @see https://github.com/occ/TraceKit\n * @class Exception\n */\nexport class Exception {\n  private originOnError: ErrorEventHandler = window.onerror;\n  private report: Report;\n\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\n  private ERROR_TYPES: RegExp = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n\n  constructor(config: Trace.Config) {\n    this.handleWindowOnError();\n    this.report = new Report(config);\n  }\n\n  private handleWindowOnError() {\n    let self = this;\n    let stackInfo: Trace.StackInfo = null;\n\n    window.onerror = function (message: string, fileName: string, lineNumber: number, columnNumber: number, error: Error) {\n      if (error) {\n        stackInfo = self.analyzeErrorStack(error);\n      } else {\n        const frame: Trace.StackFrame = { fileName, lineNumber, columnNumber, func: '?' };\n        let type, msg = message;\n        if (Object.prototype.toString.call(message) === '[object String]') {\n          // example: ['Uncaught TypeError: blah blah blah', 'TypeError' 'blah blah blah']\n          const msgGroup: Array<string> = message.match(self.ERROR_TYPES);\n          if (msgGroup) {\n            type = msgGroup[1];\n            msg = msgGroup[2];\n          }\n        }\n\n        // set exception data\n        stackInfo = {\n          type,\n          message: msg,\n          lineNumber,\n          columnNumber,\n          stacktrace: {\n            frames: [frame]\n          }\n        }\n      }\n\n      // apply original window.onerror\n      self.originOnError && self.originOnError.apply(window, arguments);\n      self.report.handleStackInfo(stackInfo);\n      // for console\n      return false;\n    }\n  }\n\n  /**\n   * Analyze stack information from Error object\n   * @param {Error} error \n   * @param {number} [depth] \n   */\n  public analyzeErrorStack(error: Error, depth?: number): Trace.StackInfo {\n    const { name, message } = error;\n    depth = (depth == null ? 0 : +depth);\n    let stackInfo: Trace.StackInfo;\n\n    try {\n      stackInfo = this.analyzeStackFromProp(error);\n      if (stackInfo) return stackInfo;\n    } catch (e) { }\n\n    try {\n      stackInfo = this.analyzeStackFromCaller(error, depth + 1);\n      if (stackInfo) return stackInfo;\n    } catch (e) { }\n\n    return {\n      type: name,\n      message,\n      url: window.location.href\n    }\n  }\n\n  /**\n   * Analyze stack from error object properties\n   * @param {Error} error \n   * @returns {Trace.StackInfo} \n   * @memberof Exception\n   */\n  private analyzeStackFromProp(error: Error): Trace.StackInfo {\n    const { name, stack, message } = error;\n    if (typeof stack === 'undefined' || !stack) return;\n\n    const chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n    const gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n    const winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\n    const chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n    const geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n    const lines = stack.split('\\n');\n    const reference = /^(.*) is undefined$/.exec(message);\n\n    let frames: Array<Trace.StackFrame> = [], submatch, parts, element: Trace.StackFrame;\n\n    for (let i = 0, j = lines.length; i < j; ++i) {\n      if ((parts = chrome.exec(lines[i]))) {\n        const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n        const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n          parts[3] = submatch[2]; // line\n          parts[4] = submatch[3]; // column\n        }\n        element = {\n          fileName: !isNative ? parts[2] : null,\n          func: parts[1] || '?',\n          args: isNative ? [parts[2]] : [],\n          lineNumber: parts[3] ? +parts[3] : null,\n          columnNumber: parts[4] ? +parts[4] : null\n        };\n      } else if (parts = winjs.exec(lines[i])) {\n        element = {\n          fileName: parts[2],\n          func: parts[1] || '?',\n          args: [],\n          lineNumber: +parts[3],\n          columnNumber: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = gecko.exec(lines[i]))) {\n        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = null; // no column when eval\n        } else if (i === 0 && !parts[5] && typeof (error as any).columnNumber !== 'undefined') {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          frames[0].columnNumber = (error as any).columnNumber + 1;\n        }\n        element = {\n          fileName: parts[3],\n          func: parts[1] || '?',\n          args: parts[2] ? parts[2].split(',') : [],\n          lineNumber: parts[4] ? +parts[4] : null,\n          columnNumber: parts[5] ? +parts[5] : null\n        };\n      } else {\n        continue;\n      }\n\n      if (!element.func && element.lineNumber) element.func = '?';\n      if (element.args.length === 0) delete element.args;\n      frames.push(element);\n    }\n\n    if (!frames.length) return null;\n\n    return {\n      type: name,\n      message,\n      stacktrace: {\n        frames\n      }\n    };\n  }\n\n  /**\n   * Analyze stack from arguments.caller chain\n   * @param {Error} error \n   * @param {number} depth \n   * @returns {Trace.StackInfo} \n   */\n  private analyzeStackFromCaller(error: Error, depth: number): Trace.StackInfo {\n    const { name, message } = error;\n    const functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i;\n\n    let frames: Array<Trace.StackFrame> = [], funcs = {}, recursion = false, parts, frame: Trace.StackFrame, source;\n\n    for (let curr = this.analyzeStackFromCaller.caller; curr && !recursion; curr = curr.caller) {\n      if (curr === this.analyzeStackFromProp) {\n        continue;\n      }\n\n      frame = {\n        fileName: null,\n        func: '?',\n        lineNumber: null,\n        columnNumber: null\n      };\n\n      if (curr.name) {\n        frame.func = curr.name;\n      } else if ((parts = functionName.exec(curr.toString()))) {\n        frame.func = parts[1];\n      }\n\n      typeof frame.func === 'undefined' && (frame.func = (parts.input as string).substring(0, parts.indexOf('{')));\n\n      funcs['' + curr] ? recursion = true : funcs['' + curr] = true;\n\n      frames.push(frame);\n    }\n\n    depth && frames.splice(0, depth);\n\n    let stackInfo: Trace.StackInfo = {\n      type: name,\n      message,\n      stacktrace: { frames }\n    }\n\n    const err: any = error;\n    this.analyzeFirstFrame(stackInfo, err.sourceURL || err.fileName, err.line || err.lineNumber, err.message || err.description)\n\n    return stackInfo;\n  }\n\n  /**\n   * Adds information about the first frame to incomplete stack traces.\n   * Safari and IE require this to get complete data on the first frame.\n   * @param {*} stackInfo \n   * @param {string} url \n   * @param {number} line \n   * @param {string} message \n   * @returns {boolean} \n   */\n  private analyzeFirstFrame(stackInfo: any, url: string, line: number, message: string): boolean {\n    let initial = { url, line, func: '?' };\n\n    if (initial.url && initial.line) {\n      stackInfo.incomplete = false;\n\n      if (stackInfo.stack.length > 0) {\n        if (stackInfo.stack[0].url === initial.url) {\n          if (stackInfo.stack[0].line === initial.line) {\n            return false; // already in stack trace\n          } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n            stackInfo.stack[0].line = initial.line;\n            return false;\n          }\n        }\n      }\n\n      stackInfo.stack.unshift(initial);\n      stackInfo.partial = true;\n      return true;\n    } else {\n      stackInfo.incomplete = true;\n    }\n\n    return false;\n  }\n}","import { defaultConfig } from './config';\nimport { Report } from './report';\nimport { joinRegExp, isError } from './util';\nimport Tracekit from './tracekit';\nimport Perf from './performance';\nimport { Exception } from './exception';\n\nexport default class Trace {\n  // private computeStackTrace: TraceKit.ComputeStackTrace = Tracekit['computeStackTrace'];\n  private analyzeErrorStack;\n  private globalConfig: Trace.Config = defaultConfig;\n  private report: Report;\n\n  public config(config?: Trace.Config) {\n    this.globalConfig = Object.assign({}, this.globalConfig, config);\n    this.processConfig();\n    this.report = new Report(this.globalConfig);\n    this.analyzeErrorStack = new Exception(this.globalConfig).analyzeErrorStack;\n    window.addEventListener('beforeunload', () => {\n      const perf = new Perf(this.globalConfig);\n      perf.payloadSending();\n    });\n  }\n\n  public captureException(exception: Error): void {\n    if (!isError(exception)) {\n      return this.captureMessage(exception as any);\n    }\n\n    try {\n      const stackInfo: Trace.StackInfo = this.analyzeErrorStack(exception);\n      this.report.handleStackInfo(stackInfo);\n    } catch (e) {\n      if (exception !== e) throw e;\n    }\n  }\n\n  public captureMessage(message: string): void {\n    if (!!(this.globalConfig.ignoreErrors as RegExp).test\n      && (this.globalConfig.ignoreErrors as RegExp).test(message)) return;\n\n    let exception: any;\n    try {\n      throw new Error(message);\n    } catch (e) {\n      exception = e;\n    }\n\n    let stackInfo = this.analyzeErrorStack(exception);\n    let frames: Trace.StackFrame[] = this.report.prepareFrames(stackInfo);\n\n    let catchedException: Trace.CatchedException = {\n      stacktrace: { frames },\n      message\n    }\n\n    this.report.handlePayload(catchedException);\n  }\n\n  private processConfig() {\n    const ignoreErrors = this.globalConfig.ignoreErrors as Array<RegExp>;\n    const ignoreUrls = this.globalConfig.ignoreErrors as Array<RegExp>;\n\n    ignoreErrors.push(/^Script error\\.?$/);\n    ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n    this.globalConfig.ignoreErrors = joinRegExp(ignoreErrors);\n\n    this.globalConfig.ignoreUrls = ignoreUrls.length && joinRegExp(ignoreUrls);\n  }\n}\n"],"names":["value","Object","prototype","toString","call","Error","crypto","window","getRandomValues","arr","Uint16Array","pad","num","v","length","replace","c","r","Math","random","eventType","options","document","_event","key","substr","toUpperCase","createEvent","initEvent","hasOwnProperty","dispatchEvent","toLowerCase","obj","name","replacement","track","origin","push","func","args","i","arguments","deep","apply","this","wrap","e","undefined","trace","track_wrapper","property","process","wrapped","patterns","sources","pattern","source","RegExp","join","element","nextStr","out","height","len","sepLength","htmlElementAsString","parentElement","reverse","className","classes","attr","tagName","id","split","attrWhitelist","getAttribute","url","match","query","fragment","result","attributes","item","request","XMLHttpRequest","onreadystatechange","readyState","status","onSuccess","onError","error","XDomainRequest","onload","onerror","open","send","JSON","stringify","data","defaultConfig","config","getCollection","collection","navigator","sendBeacon","log","performanceUrl","_this","Promise","resolve","performance","timing","navigation","resource","getEntriesByType","redirect","redirectEnd","redirectStart","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","tls","secureConnectionStart","firstPaint","responseStart","navigationStart","network","responseEnd","dom","domComplete","firstScreen","domContentLoadedEventEnd","interactive","domInteractive","pageLoad","loadEventStart","redirectCount","navigationType","type","resources","forEach","initiatorType","duration","transferSize","toFixed","userAgent","location","href","protocol","apiKey","host","_config","getDomBreadcrumbs","getXhrBreadcrumbs","getLocationBreadcurmbs","getConsoleBreadcrumbs","autoBreadcrumbs","clickEventSelectors","changeEventSelectors","addEventListener","event","eventHandler","eventName","selectorFilters","target","srcElement","acceptTag","getAttributes","htmlTreeAsString","captureBreadcrumb","selectors","tag","indexOf","prop","xhr","self","wrappedBuiltIns","xhrproto","origOpen","method","_trace_xhr","origSend","statusCode","props","j","onreadystatechangeHandler","chrome","app","runtime","history","pushState","oldOnPopState","onpopstate","currentHref","captureUrlChange","lastHref","origPushState","from","to","parsedLoc","parseUrl","parsedTo","parsedFrom","relative","Perf","payloadSending","console","consoleMethodCallback","msg","level","wrapConsole","callback","originalConsoleLevel","originalConsole","sentryLevel","slice","logger","extra","crumb","_crumb","assign","timestamp","Date","getTime","crumbsData","maxBreadcrumbs","shift","environment","documentElement","clientWidth","body","clientHeight","language","breadcrumbs","BreadCrumbs","stackInfo","frames","prepareFrames","message","lineNumber","columnNumber","handleException","exception","reportData","title","version","guid","sendPayload","stacktrace","maxStackDepth","fileName","ignoreErrors","test","ignoreUrls","handlePayload","payload","lastGuid","repeatReport","isRepeatReport","lastReport","exceptionUrl","current","last","isSameException","arrayEx1","arrayEx2","ex1","ex2","isSameStacktrace","stacktrace1","stacktrace2","index","handleWindowOnError","report","Report","analyzeErrorStack","frame","msgGroup","ERROR_TYPES","originOnError","handleStackInfo","depth","analyzeStackFromProp","analyzeStackFromCaller","stack","gecko","winjs","chromeEval","geckoEval","lines","exec","submatch","parts","isNative","functionName","funcs","recursion","curr","caller","input","substring","splice","err","analyzeFirstFrame","sourceURL","line","description","initial","incomplete","unshift","partial","globalConfig","processConfig","Exception","isError","captureMessage","catchedException","joinRegExp"],"mappings":"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"}